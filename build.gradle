buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/sponge-legacy/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

version = build_version
group = "xyz.heroesunited"
archivesBaseName = "heroesunited"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'official', version: "$project.minecraft_version"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=heroesunited.mixins.json"
            mods {
                heroesunited {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=heroesunited.mixins.json"
            mods {
                heroesunited {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'heroesunited', '--all', '--output', file('src/generated/resources/')
            arg "-mixin.config=heroesunited.mixins.json"
            mods {
                heroesunited {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'lib'
    }
}

configurations {
    shade
    compile.extendsFrom(shade)
}

shadowJar {
    configurations = [project.configurations.shade]
    exclude 'com/sun/jna/**'
    exclude 'software/bernie/example/**'
    exclude 'assets/geckolib3/**'
    relocate 'software.bernie.geckolib', 'software.bernie.HU.geckolib'

    classifier ''
}

dependencies {
    minecraft "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"
    compile 'org.spongepowered:mixin:0.8'
    compile 'com.github.Vatuu:discord-rpc:1.6.2'
    compile fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:$project.geckolib_version")

    shade 'com.github.Vatuu:discord-rpc:1.6.2'
    shade 'com.github.Vatuu:discord-rpc-binaries:3.4.0'
    shade fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:$project.geckolib_version")
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
    archives tasks.shadowJar
}

reobf {
    shadowJar {
        dependsOn tasks.createMcpToSrg
        mappings = tasks.createMcpToSrg.outputs.files.singleFile
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${archivesBaseName}",
                "Specification-Vendor"    : "${archivesBaseName}sareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "${archivesBaseName}sareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "heroesunited.mixins.json"
        ])
    }
}


mixin {
    add sourceSets.main, "heroesunited.refmap.json"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            artifact deobfJar
            artifactId = "hu-core"
        }
    }
    repositories {
        maven {
            def repsyURL = System.getenv("repsyURL")
            url = repsyURL
            credentials {
                def envUsername = System.getenv("repsyUser")
                def envPassword = System.getenv("repsyPassword")
                username = envUsername
                password = envPassword
            }
        }
    }
}